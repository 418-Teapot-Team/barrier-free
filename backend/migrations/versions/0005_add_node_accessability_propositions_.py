"""Add node_accessability_propositions table

Revision ID: 0005
Revises: 0004
Create Date: 2025-04-13 18:09:41.854224

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0005'
down_revision: Union[str, None] = '0004'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('node_accessability_propositions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('osm_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('accessibility', postgresql.ENUM('full', 'partial', 'none', name='node_accessibility', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('node_accessability_propositions_user_id_users_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('node_accessability_propositions_pkey'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('node_accessability_propositions')
    # ### end Alembic commands ###
